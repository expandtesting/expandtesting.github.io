<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programmation on Expand Testing</title><link>https://expandtesting.com/categories/programmation/</link><description>Recent content in Programmation on Expand Testing</description><generator>Hugo -- gohugo.io</generator><language>fr-fr</language><copyright>Copyright &amp;copy; 2022 [Expand Testing](https://expandtesting.com/)</copyright><lastBuildDate>Thu, 30 Dec 2021 08:38:30 +0200</lastBuildDate><atom:link href="https://expandtesting.com/categories/programmation/index.xml" rel="self" type="application/rss+xml"/><item><title>Programmation asynchrone en JavaScript</title><link>https://expandtesting.com/blog/javascript-asynchrone/</link><pubDate>Thu, 30 Dec 2021 08:38:30 +0200</pubDate><guid>https://expandtesting.com/blog/javascript-asynchrone/</guid><description>Introduction Aujourd&amp;rsquo;hui, il est clair que l&amp;rsquo;écosystème JavaScript est incontournable pour le développement d&amp;rsquo;applications web et mobiles modernes (frontend et backend).</description></item><item><title>Principes SOLID simplifiés (5/5): Inversion De Dépendance</title><link>https://expandtesting.com/blog/principes-solid-simplifies-inversion-de-dependance/</link><pubDate>Sat, 06 Jun 2020 18:15:30 +0200</pubDate><guid>https://expandtesting.com/blog/principes-solid-simplifies-inversion-de-dependance/</guid><description>Introduction Dans mon précédent article j’ai expliqué le quatrième principe SOLID (Ségrégation d’interface).</description></item><item><title>Principes SOLID simplifiés (4/5): Ségrégation d’interface</title><link>https://expandtesting.com/blog/principes-solid-simplifies-segregation-interface/</link><pubDate>Fri, 05 Jun 2020 04:38:30 +0200</pubDate><guid>https://expandtesting.com/blog/principes-solid-simplifies-segregation-interface/</guid><description>Introduction Dans mon précédent article j’ai expliqué le troisième principe SOLID (Substitution de Liskov).</description></item><item><title>Principes SOLID simplifiés (3/5): Substitution de Liskov</title><link>https://expandtesting.com/blog/principes-solid-simplifies-substitution-de-liskov/</link><pubDate>Thu, 04 Jun 2020 04:38:30 +0200</pubDate><guid>https://expandtesting.com/blog/principes-solid-simplifies-substitution-de-liskov/</guid><description>Introduction Dans mon précédent article j’ai expliqué le deuxième principe SOLID (Ouvert-Fermé).</description></item><item><title>Principes SOLID simplifiés (2/5): Ouvert-Fermé</title><link>https://expandtesting.com/blog/principes-solid-simplifies-ouvert-ferme/</link><pubDate>Wed, 03 Jun 2020 04:38:30 +0200</pubDate><guid>https://expandtesting.com/blog/principes-solid-simplifies-ouvert-ferme/</guid><description>Introduction Dans un précédent article j’ai évoqué le premier principe S.</description></item><item><title>Principes SOLID simplifiés (1/5): Responsabilité unique</title><link>https://expandtesting.com/blog/principes-solid-simplifies-responsabilite-unique/</link><pubDate>Mon, 01 Jun 2020 13:38:30 +0200</pubDate><guid>https://expandtesting.com/blog/principes-solid-simplifies-responsabilite-unique/</guid><description>Les principes S.O.L.I.D dans le contexte de l&amp;rsquo;automatisation des tests L&amp;rsquo;acronyme S.</description></item></channel></rss>